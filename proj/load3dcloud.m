ptCloud = pcread("./bunny/data/bun000.ply");


%estimate the surface normals of the point cloud?

%{
normals = pcnormals(ptCloud) returns a matrix that 
stores a normal for each point in the input ptCloud. 
The function uses six neighboring points to fit a local plane
 to determine each normal vector.

Can use a k parameter to determine the number of points to use 
in local plane fitting
%}

normals = pcnormals(ptCloud);

figure
pcshow(ptCloud); % well that was easy
x = ptCloud.Location(1:end,1);
y = ptCloud.Location(1:end,2);
z = ptCloud.Location(1:end,3);
u = normals(1:end,1);
v = normals(1:end,2);
w = normals(1:end,3);

quiver3(x,y,z,u,v,w);

%we have surface normals, now we need the "Darboux uvn frame"
%To get these calculations, from the paper we need:
% 1. Find all the points in the sphere generated by a given radius
%[indices,dists] = findNeighborsInRadius(ptCloud,point,radius) %use this

%for every pair of points in the redius (they have to be different)
% 1.Take their estimated normals, ni and nj
% 2.pi has a smaller angle to the line connecting the two points
% 3. Calculate the following values : alpha phi and theta. 
% These three points, plus the euclidean distance of the two points, will
% give you the freature space.
% use pdist for the Euclidean distance


